// <auto-generated />
using System;
using Kolos2_1.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kolos2_1.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20240606193633_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CountryTrip", b =>
                {
                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.HasKey("IdCountry", "IdTrip");

                    b.HasIndex("IdTrip");

                    b.ToTable("CountryTrip");

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            IdTrip = 1
                        },
                        new
                        {
                            IdCountry = 2,
                            IdTrip = 2
                        });
                });

            modelBuilder.Entity("Kolos2_1.Entities.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdClient")
                        .HasName("IdClient");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Email = "a@wp.pl",
                            FirstName = "Ada",
                            LastName = "Nowak",
                            Pesel = "1",
                            Telephone = "123"
                        },
                        new
                        {
                            IdClient = 2,
                            Email = "m@wp.pl",
                            FirstName = "Adam",
                            LastName = "Malinowski",
                            Pesel = "2",
                            Telephone = "312"
                        });
                });

            modelBuilder.Entity("Kolos2_1.Entities.ClientTrip", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdClient", "IdTrip")
                        .HasName("ClientTrip_pk");

                    b.ToTable("Client_Trip", (string)null);

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            IdTrip = 1,
                            RegisteredAt = new DateTime(2024, 6, 6, 21, 36, 33, 229, DateTimeKind.Local).AddTicks(6540)
                        },
                        new
                        {
                            IdClient = 2,
                            IdTrip = 2,
                            PaymentDate = new DateTime(2024, 6, 6, 21, 37, 33, 229, DateTimeKind.Local).AddTicks(6600),
                            RegisteredAt = new DateTime(2024, 6, 6, 21, 36, 33, 229, DateTimeKind.Local).AddTicks(6590)
                        });
                });

            modelBuilder.Entity("Kolos2_1.Entities.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdCountry")
                        .HasName("IdCountry");

                    b.ToTable("Country", (string)null);

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            Name = "Maroko_kraj"
                        },
                        new
                        {
                            IdCountry = 2,
                            Name = "USA_kraj"
                        });
                });

            modelBuilder.Entity("Kolos2_1.Entities.Trip", b =>
                {
                    b.Property<int>("IdTrip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrip"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("MaxPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdTrip")
                        .HasName("IdTrip");

                    b.ToTable("Trip", (string)null);

                    b.HasData(
                        new
                        {
                            IdTrip = 1,
                            DateFrom = new DateTime(2024, 8, 6, 21, 36, 33, 231, DateTimeKind.Local).AddTicks(6420),
                            DateTo = new DateTime(2024, 9, 6, 21, 36, 33, 231, DateTimeKind.Local).AddTicks(6440),
                            Description = "Desc1",
                            MaxPeople = 120,
                            Name = "Maroko"
                        },
                        new
                        {
                            IdTrip = 2,
                            DateFrom = new DateTime(2024, 6, 6, 21, 38, 33, 231, DateTimeKind.Local).AddTicks(6440),
                            DateTo = new DateTime(2024, 6, 6, 21, 42, 33, 231, DateTimeKind.Local).AddTicks(6450),
                            Description = "Desc2",
                            MaxPeople = 90,
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("CountryTrip", b =>
                {
                    b.HasOne("Kolos2_1.Entities.Country", null)
                        .WithMany()
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolos2_1.Entities.Trip", null)
                        .WithMany()
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kolos2_1.Entities.ClientTrip", b =>
                {
                    b.HasOne("Kolos2_1.Entities.Client", "ClientNavigation")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kolos2_1.Entities.Trip", "TripNavigation")
                        .WithMany("ClientTrip")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClientNavigation");

                    b.Navigation("TripNavigation");
                });

            modelBuilder.Entity("Kolos2_1.Entities.Client", b =>
                {
                    b.Navigation("ClientTrips");
                });

            modelBuilder.Entity("Kolos2_1.Entities.Trip", b =>
                {
                    b.Navigation("ClientTrip");
                });
#pragma warning restore 612, 618
        }
    }
}
